{"ast":null,"code":"import { apiSettings } from './data.js';\nclass Api {\n  constructor(_ref) {\n    let {\n      address,\n      headers\n    } = _ref;\n    this._address = address;\n    this._headers = headers;\n  }\n  _checkRes(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  //Информация о пользователе\n  getUserInfo() {\n    console.log(\"!\");\n    return fetch(`${this._address}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n\n  //Список фото с ресурса\n  getCards() {\n    return fetch(`${this._address}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n\n  //Изменение информации о пользователей\n  editUserInfo(data) {\n    return fetch(`${this._address}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n\n  //Добавление фото\n  addCard(cardInfo) {\n    return fetch(`${this._address}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardInfo.name,\n        link: cardInfo.link\n      })\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n\n  //Удаление фото\n  deleteCard(cardId) {\n    return fetch(`${this._address}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n  toggleLike(cardId, isLiked) {\n    const methodName = isLiked ? 'DELETE' : 'PUT';\n    return fetch(`${this._address}/cards/${cardId}/likes`, {\n      method: methodName,\n      headers: this._headers\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n\n  //Изменение аватара\n  editAvatar(data) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n}\nconst api = new Api({\n  address: apiSettings.address,\n  headers: {\n    authorization: apiSettings.token,\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["apiSettings","Api","constructor","address","headers","_address","_headers","_checkRes","res","ok","Promise","reject","status","json","getUserInfo","console","log","fetch","method","then","getCards","editUserInfo","data","body","JSON","stringify","name","about","addCard","cardInfo","link","deleteCard","cardId","toggleLike","isLiked","methodName","editAvatar","avatar","api","authorization","token"],"sources":["/Users/alexanderfedorov/Documents/mesto-react/src/utils/api.js"],"sourcesContent":["import {apiSettings} from './data.js';\n\nclass Api {\n    constructor({ address, headers }) {\n      this._address = address;\n      this._headers = headers;\n    }\n    \n    _checkRes(res) {\n        if (!res.ok) {\n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n        return res.json();\n      }\n    \n    //Информация о пользователе\n    getUserInfo() {\n      console.log(\"!\");\n      return fetch(`${this._address}/users/me`, {\n        method: \"GET\",\n        headers: this._headers,\n      })\n        .then((res) => {\n          return this._checkRes(res);\n        });\n    }\n\n    //Список фото с ресурса\n    getCards() {\n      return fetch(`${this._address}/cards`, {\n        method: \"GET\",\n        headers: this._headers,\n      })\n      .then((res) => {\n        return this._checkRes(res);\n      });\n    }\n    \n    //Изменение информации о пользователей\n    editUserInfo(data) {\n      return fetch(`${this._address}/users/me`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about,\n        }),\n      })\n      .then((res) => {\n        return this._checkRes(res);\n      });\n    }\n    \n    //Добавление фото\n    addCard(cardInfo) {      \n      return fetch(`${this._address}/cards`, {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: cardInfo.name,\n          link: cardInfo.link,\n        }),\n      })\n      .then((res) => {\n        return this._checkRes(res);\n      });\n    }\n    \n    //Удаление фото\n    deleteCard(cardId) {\n      return fetch(`${this._address}/cards/${cardId}`, {\n        method: \"DELETE\",\n        headers: this._headers,\n      })\n      .then((res) => {\n        return this._checkRes(res);\n      });\n    }\n\n    toggleLike(cardId, isLiked) {\n      const methodName = (isLiked ? 'DELETE' : 'PUT');      \n      return fetch(`${this._address}/cards/${cardId}/likes`, {\n        method: methodName,\n        headers: this._headers,\n      })\n      .then((res) => {\n        return this._checkRes(res);\n      });\n    }\n  \n  //Изменение аватара\n    editAvatar(data) {\n      return fetch(`${this._address}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar,\n        }),\n      })\n      .then((res) => {\n        return this._checkRes(res);\n      });\n  }\n}\n\nconst api = new Api({\n  address: apiSettings.address,\n  headers: {\n    authorization: apiSettings.token,\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}