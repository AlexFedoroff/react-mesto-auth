{"ast":null,"code":"import { apiSettings } from './data.js';\nclass Auth {\n  constructor(_ref) {\n    let {\n      address\n    } = _ref;\n    this._address = address;\n  }\n  _checkRes(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  signUp(data) {\n    console.log(data);\n    const password = data.password;\n    const email = data.email;\n    return fetch(`${this._address}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n  signIn(data) {\n    console.log(data);\n    const password = data.password;\n    const email = data.email;\n    return fetch(`${this._address}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => {\n      return this._checkRes(res);\n    }); //!! needs to save to local storage\n  }\n\n  getUserInfo(token) {\n    return fetch(`${this._address}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkRes(res);\n    });\n  }\n}\nconst auth = new Auth({\n  address: apiSettings.authAddress\n});\nexport default auth;","map":{"version":3,"names":["apiSettings","Auth","constructor","address","_address","_checkRes","res","ok","Promise","reject","status","json","signUp","data","console","log","password","email","fetch","method","headers","body","JSON","stringify","then","signIn","getUserInfo","token","Authorization","auth","authAddress"],"sources":["/Users/alexanderfedorov/Documents/mesto-react/src/utils/Auth.js"],"sourcesContent":["import {apiSettings} from './data.js';\n\nclass Auth {\n    constructor({ address }) {\n      this._address = address;      \n    }\n    \n    _checkRes(res) {\n        if (!res.ok) {\n          return Promise.reject(`Ошибка: ${res.status}`);\n        }\n        return res.json();\n      }\n    \n    signUp(data) {\n      console.log(data);\n      const password = data.password;\n      const email = data.email;\n\n      return fetch(`${this._address}/signup`, {\n        method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",            \n          },\n          body: JSON.stringify({ password, email }),\n        })\n          .then((res) => {\n            return this._checkRes(res);\n          });\n      }\n\n    signIn(data) {\n      console.log(data);\n      const password = data.password;\n      const email = data.email;\n      return fetch(`${this._address}/signin`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",            \n          },\n          body: JSON.stringify({ password, email }),\n        })\n          .then((res) => {\n            return this._checkRes(res);\n          }); //!! needs to save to local storage\n      }\n\n    getUserInfo(token) {\n      return fetch(`${this._address}/users/me`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((res) => {\n          return this._checkRes(res);\n        });\n    }  \n}\n\nconst auth = new Auth({\n  address: apiSettings.authAddress\n});\n\nexport default auth;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,WAAW;AAErC,MAAMC,IAAI,CAAC;EACPC,WAAW,OAAc;IAAA,IAAb;MAAEC;IAAQ,CAAC;IACrB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EACzB;EAEAE,SAAS,CAACC,GAAG,EAAE;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACX,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUH,GAAG,CAACI,MAAO,EAAC,CAAC;IAChD;IACA,OAAOJ,GAAG,CAACK,IAAI,EAAE;EACnB;EAEFC,MAAM,CAACC,IAAI,EAAE;IACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,MAAMG,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IAC9B,MAAMC,KAAK,GAAGJ,IAAI,CAACI,KAAK;IAExB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACd,QAAS,SAAQ,EAAE;MACtCe,MAAM,EAAE,MAAM;MACZC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,QAAQ;QAAEC;MAAM,CAAC;IAC1C,CAAC,CAAC,CACCO,IAAI,CAAElB,GAAG,IAAK;MACb,OAAO,IAAI,CAACD,SAAS,CAACC,GAAG,CAAC;IAC5B,CAAC,CAAC;EACN;EAEFmB,MAAM,CAACZ,IAAI,EAAE;IACXC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,MAAMG,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IAC9B,MAAMC,KAAK,GAAGJ,IAAI,CAACI,KAAK;IACxB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACd,QAAS,SAAQ,EAAE;MACpCe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,QAAQ;QAAEC;MAAM,CAAC;IAC1C,CAAC,CAAC,CACCO,IAAI,CAAElB,GAAG,IAAK;MACb,OAAO,IAAI,CAACD,SAAS,CAACC,GAAG,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC;EACR;;EAEFoB,WAAW,CAACC,KAAK,EAAE;IACjB,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACd,QAAS,WAAU,EAAE;MACxCe,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCQ,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CACCH,IAAI,CAAElB,GAAG,IAAK;MACb,OAAO,IAAI,CAACD,SAAS,CAACC,GAAG,CAAC;IAC5B,CAAC,CAAC;EACN;AACJ;AAEA,MAAMuB,IAAI,GAAG,IAAI5B,IAAI,CAAC;EACpBE,OAAO,EAAEH,WAAW,CAAC8B;AACvB,CAAC,CAAC;AAEF,eAAeD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}