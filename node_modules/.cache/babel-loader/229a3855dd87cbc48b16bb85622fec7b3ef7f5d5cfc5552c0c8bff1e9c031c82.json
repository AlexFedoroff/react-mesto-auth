{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderfedorov/Documents/mesto-react/src/components/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  let {\n    component: Component,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: \"/\",\n    children: props.isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"./sign-in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","ProtectedRoute","component","Component","props","isLoggedIn"],"sources":["/Users/alexanderfedorov/Documents/mesto-react/src/components/ProtectedRoute.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route exact path=\"/\">\n      {        \n        props.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"./sign-in\" />          \n        )\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAEnD,MAAMC,cAAc,GAAG,QAAwC;EAAA,IAAvC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAM,CAAC;EACxD,oBACE,QAAC,KAAK;IAAC,KAAK;IAAC,IAAI,EAAC,GAAG;IAAA,UAEjBA,KAAK,CAACC,UAAU,gBACd,QAAC,SAAS;MAAA,GAAKD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAI,gBAExB,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA;EACzB;IAAA;IAAA;IAAA;EAAA,QAEG;AAEZ,CAAC;AAAC,KAZIH,cAAc;AAcpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}